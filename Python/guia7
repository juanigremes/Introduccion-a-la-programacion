#Ej 1.1
def pertenece (s: list[int],e: int ) -> bool:
    res: bool = False
    for elemento in s:
        if (e == elemento):
            res = True

    return res

def perteneceV2 (s: list[int], e: int ) -> bool:
    res: bool = False
    for i in range (0,len(s),1):
        if (s[i] == e) :
            res = True
    
    return res

def perteneceV3 (s: list[int], e: int ) -> bool:
    res: bool = False
    i = 0
    while (i < (len(s)) and res == False):
        if (s[i] == e):
            res = True
        else:
            i += 1
    
    return res
#puedo sacar el else y ("res == false") y que i+=1 pase siempre, va a frenar cuando  i sea mayor al indice

("""
print (perteneceV3 ([1,2,3,4,5],5))
print (perteneceV3 ([1,2,3,4,5],6))
print (perteneceV3 ([1,2,3,4,5],1))
print (perteneceV3 ([1,2,3,4,5],7))
""")

#Ej 1.2
def divide_a_todos (s: list[int], e:int) -> bool:
    res: bool = True
    for elemento in s:
        if ((elemento%e) != 0):
            res = False

    return res

("""
print (divide_a_todos ([2,4,6,8,10],2))
print (divide_a_todos ([2,4,6,8,11],2))
print (divide_a_todos ([5,10,15,20],5))
print (divide_a_todos ([5,11,15,20],5))
""")

#Ej 1.3
def suma_total (s: list[int]):
    total: int = 0
    for elemento in s:
        total += elemento

    return total

("""
print (suma_total ([1,1,1,2]))
print (suma_total ([1,2,3,4,5]))
""")

#Ej 1.4
def ordenados (s:list[int]) -> bool:
    res: bool = True
    if (len(s) == 0):
        return res
    else:
        i:int = 0
        j:int = 1
        while ((j < len(s)) and (res == True)):
            primerElemento:int = s[i]
            segundoElemento: int = s[j]
            if (primerElemento > segundoElemento):
                res = False
            else:
                i += 1
                j += 1

    return res

("""
print (ordenados ([1,2,3,4,5]))
print (ordenados ([1,2,3,5,4]))
print (ordenados ([1,3,2,4,5]))
""")

#Ej 1.5
def palabraLarga (palabras: list[str]) -> bool:
    res: bool = False
    for palabra in palabras:
        if (len(palabra) > 7):
            res = True

    return res

("""
print (palabraLarga (["hola","letra","primo"]))
print (palabraLarga (["hola","letra","barbaridad"]))
""")

#Ej 1.6
